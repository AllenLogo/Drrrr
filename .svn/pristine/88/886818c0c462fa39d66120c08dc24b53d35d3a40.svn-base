package websocket.handler;


import org.apache.log4j.Logger;
import org.springframework.web.socket.CloseStatus;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketHandler;
import org.springframework.web.socket.WebSocketMessage;
import org.springframework.web.socket.WebSocketSession;


public class SystemWebSocketHandler implements WebSocketHandler {
 
	private Logger log = Logger.getLogger(SystemWebSocketHandler.class);
	
	private MessageService msgService;
	private String name;
	private String ip;
    
    /**
     * websocket链接成功，websocketsession加入uer
     * */
    public void afterConnectionEstablished(WebSocketSession session) throws Exception {
    	this.name = (String) session.getAttributes().get("name");
    	this.ip = (String) session.getAttributes().get("ip");
    	log.info("[用户："+name+"，IP地址："+ip+"，count：分配websocket]");
    }
 
    
    /**
     * websocketsession发送消息
     * */
    public void handleMessage(WebSocketSession session, WebSocketMessage<?> message) throws Exception {
    	msgService.MessageController(message);
    	String coutent = "这里是服务器，收到消息："+message;
    	TextMessage msg = new TextMessage(coutent.getBytes());
    	System.out.println(message);
    	session.sendMessage(msg);
    }
 
    
    /**
     * webscpoketsession出错 关闭websocketsession，user删除元素
     * */    
    public void handleTransportError(WebSocketSession session, Throwable exception) throws Exception {
        if(session.isOpen()){
            session.close();
        }
    }
 
    public void afterConnectionClosed(WebSocketSession session, CloseStatus closeStatus) throws Exception {
    }
 
    public boolean supportsPartialMessages() {
        return false;
    }
 
}