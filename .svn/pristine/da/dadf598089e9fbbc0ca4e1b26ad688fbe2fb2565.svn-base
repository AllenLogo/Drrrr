package controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import dao.LoginDao;
import dao.LoginInfoPo;

@Controller
@Scope("prototype")
public class LoginController {
	
	private Logger log = LoggerFactory.getLogger(LoginController.class);
	private LoginDao logindao;
	
	@SuppressWarnings("deprecation")
	@ResponseBody
	@RequestMapping( value = "/login", produces="text/html;charset=UTF-8" , method = RequestMethod.POST )
	public String test1(@RequestParam("name") String name){
		for (LoginInfoPo logininfoPO : logindao.doquery()) {  
            System.out.println("ID:"+logininfoPO.getId()+"--" +
            		"NAME:" +logininfoPO.getName()+"--"+
            		"IP" +logininfoPO.getIp()+"--"+
            		"LOGINIME"+logininfoPO.getLogintime().toGMTString());
        }  
		log.info(name+"使用LoginController");
		return name;
	}
	
	@RequestMapping( value = "/login1" , method = RequestMethod.POST )
	public String test(@RequestParam("name") String name,HttpSession session,HttpServletRequest re){
		//String sql = "insert into logininfo(name,ip) values(?,?);";
		/*jdbcTemplate.update(sql, name,getIpAddr(re));*/
		if( name.equals("") && name != null ){
			session.setAttribute("name", name);
			return "chat";
		}else{
			return "index";
		}
	}
	
	public String getIpAddr(HttpServletRequest request) { 
	    String ip = request.getHeader("x-forwarded-for"); 
	    if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) { 
	        ip = request.getHeader("PRoxy-Client-IP"); 
	    } 
	    if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) { 
	        ip = request.getHeader("WL-Proxy-Client-IP"); 
	    } 
	    if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) { 
	        ip = request.getRemoteAddr(); 
	    } 
	    return ip; 
	}

	public LoginDao getLogindao() {
		return logindao;
	}

	public void setLogindao(LoginDao logindao) {
		this.logindao = logindao;
	}   

	/*public JdbcTemplate getJdbcTemplate() {
		return jdbcTemplate;
	}

	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}*/
}
